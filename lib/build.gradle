/*
 * This file was generated by the Gradle 'init' task.
 *
 * This generated file contains a sample Java library project to get you started.
 * For more details on building Java & JVM projects, please refer to https://docs.gradle.org/8.2.1/userguide/building_java_projects.html in the Gradle documentation.
 */

plugins {
    // Apply the java-library plugin for API and implementation separation.
    id 'java-library'
    id 'jacoco'
}
jar {
    manifest {
        attributes(
                'Main-Class': 'org.pseudosweep.Launch'
        )
    }
    from {
        configurations.runtimeClasspath.collect { it.isDirectory() ? it : zipTree(it) }
    }
    duplicatesStrategy = DuplicatesStrategy.EXCLUDE
    archiveBaseName = "pseudosweep"
}

repositories {
    // Use Maven Central for resolving dependencies.
    mavenCentral()
}

dependencies {
    implementation 'junit:junit:4.13.2'

    // Use JUnit Jupiter for testing.
    testImplementation 'org.junit.jupiter:junit-jupiter:5.9.2'
    testImplementation 'org.hamcrest:hamcrest:2.2'
    testRuntimeOnly 'org.junit.platform:junit-platform-launcher'

    // This dependency is exported to consumers, that is to say found on their compile classpath.
    api 'org.apache.commons:commons-math3:3.6.1'
    api 'com.fasterxml.jackson.core:jackson-databind:2.14.0'
    api 'org.javassist:javassist:3.29.2-GA'
    api 'com.github.javaparser:javaparser-symbol-solver-core:3.24.7'
    api 'com.beust:jcommander:1.82'
    api 'junit:junit:4.13.2'
    api 'org.junit.platform:junit-platform-engine:1.9.0'
    api 'org.junit.platform:junit-platform-console-standalone:1.9.0'
    api 'org.junit.platform:junit-platform-suite-engine:1.9.0'
    api 'org.apache.commons:commons-math3:3.6.1'

    // This dependency is used internally, and not exposed to consumers on their own compile classpath.
    implementation 'com.google.guava:guava:31.1-jre'
}

group = 'org.pseudosweep'
version = '0.0.1-SNAPSHOT'

// Apply a specific Java toolchain to ease working on different environments.
java {
    toolchain {
        languageVersion = JavaLanguageVersion.of(17)
    }
}

tasks.named('test') {
    // Use JUnit Platform for unit tests.
    useJUnitPlatform()
    exclude 'org/pseudosweep/test**'
    testLogging.showStandardStreams = true
    finalizedBy jacocoTestReport // report is always generated after tests run
}
jacocoTestReport {
    dependsOn test // tests are required to run before generating the report
}
